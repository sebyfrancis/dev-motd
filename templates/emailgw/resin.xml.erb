<!--
   - Resin 4.0 configuration file.
  -->
<resin xmlns="http://caucho.com/ns/resin" xmlns:resin="urn:java:com.caucho.resin">

  <!-- property-based Resin configuration -->
  <resin:properties optional="true" path="${__DIR__}/resin.properties"/>
  <resin:properties optional="true" path="cloud:/resin.properties" recover="true"/>
  <resin:if test="${properties_import_url}">
    <resin:properties optional="true" path="${properties_import_url}" recover="true"/>
  </resin:if>


  <!-- #################################################################
     - Platform28 system properties,
     - including Email connector.
     - #################################################################
     -->

  <!-- Stats Server -->
  <system-property com.platform28.statistics.zk.group="${stats_svr_group}"/>
  <system-property com.platform28.statistics.zk.hosts="$zk_hosts"/>
  <!-- <system-property com.platform28.statistics.zk.auto_offset="100"/>-->
  <system-property com.platform28.statistics.zk.connection_timeout="1000000"/>

  <system-property com.platform28.emailConnector.kafka.id="email-gateway"/>
  <system-property com.platform28.emailConnector.kafka.zookeeper.location="${kafka_hosts}"/>
  <system-property com.platform28.emailConnector.kafka.stats.channel="call_status"/>

  <system-property com.platform28.rest.appserver.type="resin"/>

  <!-- Set the Primary location to store the email message content and attachments -->
  <system-property com.platform28.mail.connector.file.local_prefix="${email_data}"/>
  <system-property mail.smtp.ssl.trust="*"/>
  <system-property mail.smtps.ssl.trust="*"/>
  <system-property javax.net.debug="all"/>
  
  <system-property com.platform28.loginSessionMonitor.stop="${loginsessionmonitor_stop}"/>
  <system-property com.platform28.mail.connector.debug.emailbody="${debug_emailbody}"/>
  <system-property com.platform28.emailConnector.appKey="${email_app_key}"/>
  <system-property com.platform28.emailConnector.scheduler.scanning_interval="${scheduler_scanning_interval}"/>
  <system-property com.platform28.emailConnector.request_timeout="25200"/>
  <system-property platform28.emailConnector.app.server="${app_server}"/>
  <system-property com.platform28.emailConnector.acdServer="${acd_server}"/>
  <system-property com.platform28.emailConnector.routerServer="${route_server}"/>
  <system-property com.platform28.emailConnector.soaOperation.response_timeout="10000"/>
  <system-property com.platform28.emailConnector.soaOperation.connect_timeout="10000"/>
  <system-property com.platform28.emailConnector.soaOperation.socket_timeout="10000"/>
  <system-property com.platform28.mail.connector.trust_all_servers="true"/>
  <system-property mail.imap.connectiontimeout="15000"/>
  <system-property mail.imap.timeout="60000"/>
  <system-property mail.imap.writetimeout="30000"/>
  <system-property com.platform28.mail.connector.trust_all_servers="true"/>

  <!-- SIP Registration -->
  <system-property com.platform28.acd.sip.register="${sip_registration}"/>
  <system-property com.platform28.emailConnector.sip.registration.username="${sip_registration_username}"/>
  <system-property com.platform28.emailConnector.sip.registration.password="${sip_registration_password}"/>
  <system-property com.platform28.emailConnector.sip.registration.domain="${sip_registration_domain}"/>
  <system-property com.platform28.sip.proxyServer="${sip_proxy_server}"/>
  
  <system-property com.platform28.sip.messageDebug="true"/>
  <system-property com.platform28.sip.bindAddress="${sip_bindaddress}"/>
  <!-- End of SIP configuration -->


  <!-- Logging configuration for the JDK logging API -->
  <log-handler name="" level="all" path="stdout:"
               timestamp="%Y-%m-%d %H:%M:%S.%s"
               format=" [${thread}] ${log.level} ${log.name} - ${log.message}"/>
  <!--
     - level='info' for production
     - 'fine' or 'finer' for development and troubleshooting
    -->
  <logger name="" level="${log_level?:'info'}"/>
  <logger name="com.caucho.java" level="${java_log_level?:'info'}"/>
  <logger name="com.caucho.loader" level="${loader_log_level?:'info'}"/>
  <logger name="com.gotovoice" level="${platform28_log_level?:'info'}"/>
  <logger name="com.platform28" level="${platform28_log_level?:'info'}"/>


  <!--
     - Default configuration applied to all clusters, including
     - HTTP, HTTPS, and /resin-admin configuration.
    -->
  <resin:import path="${__DIR__}/cluster-default.xml"/>
  <!--
     - health configuration
    -->
  <resin:import path="${__DIR__}/health.xml"/>
  <!--
     - Remote management requires at least one enabled admin user.
    -->

  <resin:AdminAuthenticator>
    <user name="${admin_user}" password="${admin_password}"/>
    <resin:import optional="true" path="${__DIR__}/admin-users.xml"/>
    <resin:import optional="true" path="cloud:/admin-users.xml" recover="true"/>
  </resin:AdminAuthenticator>


  <!--
     - For clustered systems, create a password in as cluster_system_key
    -->
  <cluster-system-key>${cluster_system_key}</cluster-system-key>

  <!--
     - For production sites, change dependency-check-interval to something
     - like 5000h, so it effectively disables restarts.
    -->
  <dependency-check-interval>${dependency_check_interval?:'5000h'}</dependency-check-interval>
  <!-- For resin.properties dynamic cluster joining -->
  <home-cluster>${home_cluster}</home-cluster>
  <home-server>${home_server}</home-server>
  <elastic-server>${elastic_server}</elastic-server>
  <elastic-dns>${elastic_dns}</elastic-dns>
  <!--
     - Configures the main application cluster.  Load-balancing configurations
     - will also have a web cluster.
    -->
  <cluster id="app">

    <database>
      <jndi-name>${jndi_name}</jndi-name>
      <driver>
          <type>${jdbc_driver}</type>
          <url>${jdbc_url}</url>
          <user>${database_user}</user>
          <password>${database_password}</password>
          <useUnicode/>
      </driver>
      
      <ping>true</ping>
      <ping-interval>2</ping-interval>
      <ping-query>select 1</ping-query>
  </database>

    <web-app-default>
      <servlet-mapping servlet-class="com.caucho.servlets.ssi.SSIServlet" url-pattern="*.shtml"/>
    </web-app-default>
    <!-- define the servers in the cluster -->
    <server-multi address-list="${app_servers}" id-prefix="app-" port="6800">
      <jvm-classpath>${resin_lib_directory}</jvm-classpath>
    </server-multi>

    <host-default>
      <!-- creates the webapps directory for .war expansion -->
      <web-app-deploy expand-preserve-fileset="WEB-INF/work/**" multiversion-routing="${webapp_multiversion_routing}" path="webapps" path-suffix="${elastic_webapp?resin.id:''}"/>
      <ear-deploy archive-directory="autodeploy" path="deploy">
        <ear-default/>
      </ear-deploy>
    </host-default>
    
    <!-- auto virtual host deployment in hosts/foo.example.com/webapps -->
    <host-deploy path="hosts">
      <host-default>
        <resin:import optional="true" path="host.xml"/>
      </host-default>
    </host-deploy>

    <!-- the default host, matching any host name -->
    <host id="" root-directory=".">
      <!--
         - webapps can be overridden/extended in the resin.xml
        -->
      <web-app id="/" root-directory="webapps/ROOT"/>
      <web-app id="/resin-admin" root-directory="${resin.root}/doc/admin">
        <prologue>
          <!-- allow access from any IP address -->
          <resin:set value="true" var="resin_admin_external"/>
          <resin:set value="true" var="resin_admin_insecure"/>
        </prologue>
      </web-app>
    </host>

    <resin:if test="${resin_doc}">
      <host id="${resin_doc_host}" root-directory="${resin_doc_host}">
        <web-app id="/resin-doc" root-directory="${resin.root}/doc/resin-doc"/>
      </host>
    </resin:if>
  </cluster>

</resin>
